{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from \"@capacitor/core\";\n\nimport type {\n  CapgoCapacitorDataStorageSqlitePlugin,\n  capEchoOptions,\n  capEchoResult,\n  capDataStorageOptions,\n  capDataStorageResult,\n  capFilterStorageOptions,\n  capKeysResult,\n  capKeysValuesResult,\n  capTablesResult,\n  capOpenStorageOptions,\n  capTableStorageOptions,\n  capValueResult,\n  capValuesResult,\n  capStorageOptions,\n  JsonStore,\n  capStoreJson,\n  capDataStorageChanges,\n  capStoreImportOptions,\n} from \"./definitions\";\nimport { Data } from \"./web-utils/Data\";\nimport { StorageDatabaseHelper } from \"./web-utils/StorageDatabaseHelper\";\nimport { isJsonStore } from \"./web-utils/json-utils\";\n\nexport class CapgoCapacitorDataStorageSqliteWeb\n  extends WebPlugin\n  implements CapgoCapacitorDataStorageSqlitePlugin\n{\n  private mDb!: StorageDatabaseHelper;\n\n  async echo(options: capEchoOptions): Promise<capEchoResult> {\n    const ret: capEchoResult = {} as capEchoResult;\n    ret.value = options.value ? options.value : \"\";\n    return ret;\n  }\n\n  async openStore(options: capOpenStorageOptions): Promise<void> {\n    const dbName = options.database ? `${options.database}IDB` : \"storageIDB\";\n    const tableName = options.table ? options.table : \"storage_store\";\n    try {\n      this.mDb = new StorageDatabaseHelper(dbName, tableName);\n      return Promise.resolve();\n    } catch (err: any) {\n      return Promise.reject(`OpenStore: ${err.message}`);\n    }\n  }\n  async closeStore(options: capStorageOptions): Promise<void> {\n    throw new Error(`Method closeStore not implemented. ${options}`);\n  }\n  async isStoreOpen(options: capStorageOptions): Promise<capDataStorageResult> {\n    throw new Error(`Method isStoreOpen not implemented. ${options}`);\n  }\n  async isStoreExists(\n    options: capStorageOptions,\n  ): Promise<capDataStorageResult> {\n    throw new Error(`Method isStoreExists not implemented. ${options}`);\n  }\n  async setTable(options: capTableStorageOptions): Promise<void> {\n    const tableName = options.table;\n    if (tableName == null) {\n      return Promise.reject(\"SetTable: Must provide a table name\");\n    }\n    if (this.mDb) {\n      try {\n        await this.mDb.setTable(tableName);\n        return Promise.resolve();\n      } catch (err: any) {\n        return Promise.reject(`SetTable: ${err.message}`);\n      }\n    } else {\n      return Promise.reject(\"SetTable: Must open a store first\");\n    }\n  }\n  async set(options: capDataStorageOptions): Promise<void> {\n    const key: string = options.key;\n    if (key == null || typeof key != \"string\") {\n      return Promise.reject(\"Set: Must provide key as string\");\n    }\n\n    const value = options.value ? options.value : null;\n    if (value == null || typeof value != \"string\") {\n      return Promise.reject(\"Set: Must provide value as string\");\n    }\n    const data: Data = new Data();\n    data.name = key;\n    data.value = value;\n    try {\n      await this.mDb.set(data);\n      return Promise.resolve();\n    } catch (err: any) {\n      return Promise.reject(`Set: ${err.message}`);\n    }\n  }\n  async get(options: capDataStorageOptions): Promise<capValueResult> {\n    const key: string = options.key;\n    if (key == null || typeof key != \"string\") {\n      return Promise.reject(\"Get: Must provide key as string\");\n    }\n    try {\n      const data: Data = await this.mDb.get(key);\n      if (data?.value != null) {\n        return Promise.resolve({ value: data.value });\n      } else {\n        return Promise.resolve({ value: \"\" });\n      }\n    } catch (err: any) {\n      return Promise.reject(`Get: ${err.message}`);\n    }\n  }\n  async remove(options: capDataStorageOptions): Promise<void> {\n    const key: string = options.key;\n    if (key == null || typeof key != \"string\") {\n      return Promise.reject(\"Remove: Must provide key as string\");\n    }\n    try {\n      await this.mDb.remove(key);\n      return Promise.resolve();\n    } catch (err: any) {\n      return Promise.reject(`Remove: ${err.message}`);\n    }\n  }\n  async clear(): Promise<void> {\n    try {\n      await this.mDb.clear();\n      return Promise.resolve();\n    } catch (err: any) {\n      return Promise.reject(`Clear: ${err.message}`);\n    }\n  }\n  async iskey(options: capDataStorageOptions): Promise<capDataStorageResult> {\n    const key: string = options.key;\n    if (key == null || typeof key != \"string\") {\n      return Promise.reject(\"Iskey: Must provide key as string\");\n    }\n    try {\n      const ret: boolean = await this.mDb.iskey(key);\n      return Promise.resolve({ result: ret });\n    } catch (err: any) {\n      return Promise.reject(`Iskey: ${err.message}`);\n    }\n  }\n  async keys(): Promise<capKeysResult> {\n    try {\n      const ret: string[] = await this.mDb.keys();\n      return Promise.resolve({ keys: ret });\n    } catch (err: any) {\n      return Promise.reject(`Keys: ${err.message}`);\n    }\n  }\n  async values(): Promise<capValuesResult> {\n    try {\n      const ret: string[] = await this.mDb.values();\n      return Promise.resolve({ values: ret });\n    } catch (err: any) {\n      return Promise.reject(`Values: ${err.message}`);\n    }\n  }\n  async filtervalues(\n    options: capFilterStorageOptions,\n  ): Promise<capValuesResult> {\n    const filter: string = options.filter;\n    if (filter == null || typeof filter != \"string\") {\n      return Promise.reject(\"Filtervalues: Must provide filter as string\");\n    }\n    let regFilter: RegExp;\n    if (filter.startsWith(\"%\")) {\n      regFilter = new RegExp(\"^\" + filter.substring(1), \"i\");\n    } else if (filter.endsWith(\"%\")) {\n      regFilter = new RegExp(filter.slice(0, -1) + \"$\", \"i\");\n    } else {\n      regFilter = new RegExp(filter, \"i\");\n    }\n    try {\n      const ret: string[] = [];\n\n      const results: Data[] = await this.mDb.keysvalues();\n      for (const result of results) {\n        if (result.name != null && regFilter.test(result.name)) {\n          if (result.value != null) {\n            ret.push(result.value);\n          } else {\n            return Promise.reject(`Filtervalues: result.value is null`);\n          }\n        }\n      }\n      return Promise.resolve({ values: ret });\n    } catch (err: any) {\n      return Promise.reject(`Filtervalues: ${err.message}`);\n    }\n  }\n  async keysvalues(): Promise<capKeysValuesResult> {\n    try {\n      const ret: any[] = [];\n      const results: Data[] = await this.mDb.keysvalues();\n      for (const result of results) {\n        if (result.name != null && result.value != null) {\n          const res: any = { key: result.name, value: result.value };\n          ret.push(res);\n        } else {\n          return Promise.reject(`Keysvalues: result.name/value are null`);\n        }\n      }\n      return Promise.resolve({ keysvalues: ret });\n    } catch (err: any) {\n      return Promise.reject(`Keysvalues: ${err.message}`);\n    }\n  }\n  async deleteStore(options: capOpenStorageOptions): Promise<void> {\n    throw new Error(`Method deleteStore not implemented. ${options}`);\n  }\n  async isTable(\n    options: capTableStorageOptions,\n  ): Promise<capDataStorageResult> {\n    const table = options.table;\n    if (table == null) {\n      return Promise.reject(\"Must provide a Table Name\");\n    }\n    try {\n      const ret = await this.mDb.isTable(table);\n      return Promise.resolve({ result: ret });\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n  async tables(): Promise<capTablesResult> {\n    try {\n      const ret = await this.mDb.tables();\n      return Promise.resolve({ tables: ret });\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n  async deleteTable(options: capTableStorageOptions): Promise<void> {\n    throw new Error(`Method deleteTable not implemented. ${options}`);\n  }\n  async importFromJson(\n    options: capStoreImportOptions,\n  ): Promise<capDataStorageChanges> {\n    const keys = Object.keys(options);\n    if (!keys.includes(\"jsonstring\")) {\n      return Promise.reject(\"Must provide a json object\");\n    }\n    let totalChanges = 0;\n\n    if (options?.jsonstring) {\n      const jsonStrObj: string = options.jsonstring;\n      const jsonObj = JSON.parse(jsonStrObj);\n      const isValid = isJsonStore(jsonObj);\n      if (!isValid) {\n        return Promise.reject(\"Must provide a valid JsonSQLite Object\");\n      }\n      const vJsonObj: JsonStore = jsonObj;\n      const dbName = vJsonObj.database\n        ? `${vJsonObj.database}IDB`\n        : \"storageIDB\";\n      for (const table of vJsonObj.tables) {\n        const tableName = table.name ? table.name : \"storage_store\";\n        try {\n          this.mDb = new StorageDatabaseHelper(dbName, tableName);\n          // Open the database\n          const bRet: boolean = this.mDb.openStore(dbName, tableName);\n          if (bRet) {\n            // Import the JsonSQLite Object\n            if (table?.values) {\n              const changes = await this.mDb.importJson(table.values);\n              totalChanges += changes;\n            }\n          } else {\n            return Promise.reject(\n              `Open store: ${dbName} : table: ${tableName} failed`,\n            );\n          }\n        } catch (err: any) {\n          return Promise.reject(`ImportFromJson: ${err.message}`);\n        }\n      }\n      return Promise.resolve({ changes: totalChanges });\n    } else {\n      return Promise.reject(\"Must provide a json object\");\n    }\n  }\n  async isJsonValid(\n    options: capStoreImportOptions,\n  ): Promise<capDataStorageResult> {\n    const keys = Object.keys(options);\n    if (!keys.includes(\"jsonstring\")) {\n      return Promise.reject(\"Must provide a json object\");\n    }\n    if (options?.jsonstring) {\n      const jsonStrObj: string = options.jsonstring;\n      const jsonObj = JSON.parse(jsonStrObj);\n      const isValid = isJsonStore(jsonObj);\n      if (!isValid) {\n        return Promise.reject(\"Stringify Json Object not Valid\");\n      } else {\n        return Promise.resolve({ result: true });\n      }\n    } else {\n      return Promise.reject(\"Must provide in options a stringify Json Object\");\n    }\n  }\n  async exportToJson(): Promise<capStoreJson> {\n    try {\n      const ret: JsonStore = await this.mDb.exportJson();\n      return Promise.resolve({ export: ret });\n    } catch (err) {\n      return Promise.reject(`exportToJson: ${err}`);\n    }\n  }\n}\n"]}